.input-disabled() {
  opacity: 0.7;
}

.select-arrow() {
  .font-icon;
  content: @select-arrow-icon-down;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
  color: @input-border-color;
  z-index: 2;
  pointer-events: none;
  text-align: right;
  vertical-align: middle;
  width: @input-font-size;
  font-size: @input-font-size;
  height: @input-font-size;
  line-height: @input-font-size;
}

.input-invalid() {
  & when (@form-state-change-text-color = true) {
    color: ~"@{input-color-@{form-state-invalid}}";
  }
  & when (@form-state-change-background = true) {
    background-color: ~"@{input-background-@{form-state-invalid}}";
  }
  & when (@form-state-change-border = true) {
    border-color: ~"@{input-border-@{form-state-invalid}}";
  }
}

.input-valid() {
  & when (@form-state-change-text-color = true) {
    color: ~"@{input-color-@{form-state-valid}}";
  }
  & when (@form-state-change-background = true) {
    background-color: ~"@{input-background-@{form-state-valid}}";
  }
  & when (@form-state-change-border = true) {
    border-color: ~"@{input-border-@{form-state-valid}}";
  }
}

.input-style() {
  border-color: @input-border-color;
  border-style: @input-border-style;
  border-width: @input-border-width;
  border-radius: @input-border-radius;
  padding: @input-padding-vertical @input-padding-horizontal;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-appearance: none;
  text-overflow: ellipsis;
  font-size: @input-font-size;
  line-height: @input-line-height;
  font-weight: @input-font-weight;
  color: @input-text-color;
  background-color: @input-background-color;
  outline: @input-outline;
  box-shadow: @input-shadow;
  text-overflow: ellipsis;
  &:hover, &.@{input-hover} {
    border-color: @input-hover-border-color;
    border-style: @input-hover-border-style;
    border-width: @input-hover-border-width;
    outline: @input-hover-outline;
    box-shadow: @input-hover-shadow;
    background-color: @input-hover-background-color;
  }
  &:focus, &.@{input-focus} {
    border-color: @input-focus-border-color;
    border-style: @input-focus-border-style;
    border-width: @input-focus-border-width;
    outline: @input-focus-outline;
    box-shadow: @input-focus-shadow;
    background-color: @input-focus-background-color;
  }
  &:disabled, &[disabled] {
    pointer-events: none;
    cursor: normal;
    .input-disabled;
  }
  &.@{input-inverse} {
    background-color: @input-border-color;
    border-color: @input-background-color;
    color: @input-background-color;
  }
  &.@{input-transparent} {
    background-color: transparent;
  }
}

.select-style() {
  height: calc( @input-line-height ~"+" @input-padding-vertical * 2 ~"+" @input-border-width * 2 );

  option {
    height: @input-line-height;
    padding: @input-padding-vertical @input-padding-horizontal;
    border: none;
  }
}

input {
  &[type="date"], &[type="datetime-local"], &[type="email"], &[type="number"], &[type="password"], &[type="search"], &[type="tel"], &[type="time"], &[type="text"], &[type="url"] {
    .input-style;
  }
}

textarea, select {
  .input-style;
}

select {
  .select-style;
}

@{form} {
  @{label} {
    text-transform: @label-text-transform;
    font-size: @label-font-size;
    line-height: @label-line-height;
    font-weight: @label-font-weight;
    color: @label-text-color;
    min-height: @label-line-height;
    display: block;
  }

  .@{hint} {
    text-transform: @hint-text-transform;
    font-size: @hint-font-size;
    line-height: @hint-line-height;
    font-weight: @hint-font-weight;
    color: @hint-text-color;
  }

  .@{control}, [class*="@{cell}"], .@{control-group} {
    &.@{input-inverse} {
      input, select, textarea {
        background-color: @input-border-color;
        border-color: @input-background-color;
        color: @input-background-color;
      }
    }
    &.@{input-transparent} {
      input, select, textarea {
        background-color: transparent;
      }
    }
    &[class*="@{icon}-"] {
      position: relative;
      &.@{icon-left} {
        &:before {
          left: @input-icon-font-size/2 + @input-padding-horizontal;
          right: auto;
        }
        input , select, textarea {
          padding-left: @input-icon-font-size*2 + @input-padding-horizontal;
        }
      }
      &.@{input-inverse} {
        &:before {
          color: @input-background-color;
        }
      }
      &:before {
        position: absolute;
        top: 0;
        bottom: 0;
        margin: auto;
        font-size: @input-icon-font-size;
        right: @input-icon-font-size/2 + @input-padding-horizontal;
        color: @input-icon-text-color;
        z-index: 2;
        events-pointer: none;
        height: 1em;
      }
      input , select, textarea {
        padding-right: @input-icon-font-size*2 + @input-padding-horizontal;
      }
      select {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
      }
    }
    &.@{select-arrow} {
      position: relative;
      select {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        padding-right: @input-icon-font-size*2 + @input-padding-horizontal;
        &.@{input-inverse} {
          + span:after {
            color: @input-background-color;
          }
        }
        + span:after {
          .select-arrow;
          right: @input-font-size/1.2 + @input-padding-horizontal;
        }
        &:focus {
          + span:after {
            content: @select-arrow-icon-up;
            color: @input-focus-border-color;
          }
        }
        &:hover {
          + span:after {
            color: @input-hover-border-color;
          }
        }
      }
      &.@{input-inverse} {
        select {
          + span:after {
            color: @input-background-color;
          }
        }
      }
    }
    &[data-addon] {
      position: relative;
      &.@{addon-left} {
        &:after {
          left: @input-icon-font-size/2 + @input-padding-horizontal;
          right: auto;
          text-align: left;
        }
        input, select, textarea {
          padding-left: @input-icon-font-size*3 + @input-padding-horizontal;
          padding-right: @input-padding-horizontal;
        }
      }
      &.@{input-inverse} {
        &:after {
          color: @input-background-color;
        }
      }
      &:after {
        position: absolute;
        top: 0;
        bottom: 0;
        margin: auto;
        font-size: @input-addon-font-size;
        text-transform: @input-addon-font-weight;
        right: @input-icon-font-size/2 + @input-padding-horizontal;
        color: @input-addon-text-color;
        text-transform: @input-addon-text-transform;
        z-index: 2;
        content: attr(data-addon);
        events-pointer: none;
        height: @input-line-height;
        white-space: nowrap;
        text-align: right;
      }
      input, select, textarea {
        padding-right: @input-icon-font-size*3 + @input-padding-horizontal;
      }
    }
  }

  &.@{form-validate} {
    input, select, textarea {
      &:not(:focus).@{form-input-focused} {
        &[pattern]:invalid, &[required]:invalid {
          .input-invalid;
        }
        &[pattern]:valid, &[required]:valid {
          .input-valid;
        }
      }
    }
    .@{control}, [class*="@{cell}"], .@{control-group} {
      &.@{select-arrow} select {
        &:not(:focus).@{form-input-focused} {
          &:invalid {
            + span:after {
              color: ~"@{input-color-@{form-state-invalid}}";
            }
          }
          &:valid {
            + span:after {
              color: ~"@{input-color-@{form-state-valid}}";
            }
          }
        }
      }
    }
  }
}

@{form}, .@{control}, [class*="@{cell}"], .@{control-group} {
  .for(@form-states); .-each(@name) {
    &.@{name} {
      &, .@{control}, [class*="@{cell}"], .@{control-group} {
        & when (@form-state-change-text-color = true) {
          &.@{input-inverse}.@{input-transparent} {
             &[class*="@{icon}-"]:before, &[data-addon]:after, &.@{select-arrow} select + span:after {
              color: ~"@{input-color-@{name}}";
            }
          }
        }
        &, &.@{input-inverse}.@{input-transparent} {
          input {
            &[type="date"], &[type="datetime-local"], &[type="email"], &[type="number"], &[type="password"], &[type="search"], &[type="tel"], &[type="time"], &[type="text"], &[type="url"] {
              & when (@form-state-change-text-color = true) {
                color: ~"@{input-color-@{name}}";
              }
              & when (@form-state-change-background = true) {
                background-color: ~"@{input-background-@{name}}";
              }
              & when (@form-state-change-border = true) {
                border-color: ~"@{input-border-@{name}}";
              }
            }
          }
          select, textarea {
            & when (@form-state-change-text-color = true) {
              color: ~"@{input-color-@{name}}";
            }
            & when (@form-state-change-background = true) {
              background-color: ~"@{input-background-@{name}}";
            }
            & when (@form-state-change-border = true) {
              border-color: ~"@{input-border-@{name}}";
            }
          }
          & when (@form-state-change-label = true) {
            @{label} {
              & when (@form-state-change-text-color = true) {
                color: ~"@{input-color-@{name}}";
              }
            }
          }
          & when (@form-state-change-hint = true) {
            .@{hint} {
              & when (@form-state-change-text-color = true) {
                color: ~"@{input-color-@{name}}";
              }
            }
          }
        }
        &.@{input-inverse} {
          select, textarea, input {
            & when (@form-state-change-background = true) {
              background-color: ~"@{input-border-@{name}}";
            }
            & when (@form-state-change-border = true) {
              border-color: ~"@{input-background-@{name}}";
            }
            & when (@form-state-change-text-color = true) {
              color: ~"@{input-background-@{name}}";
            }
          }
          & when (@form-state-change-text-color = true) {
            &, .@{control}, [class*="@{cell}"], .@{control-group} {
              &[class*="@{icon}-"]:before, &[data-addon]:after, &.@{select-arrow} select + span:after {
                color: ~"@{input-background-@{name}}";
              }
            }
          }
        }
        & when (@form-state-change-text-color = true) {
          &[class*="@{icon}-"]:before, &[data-addon]:after, &.@{select-arrow} select + span:after {
            color: ~"@{input-color-@{name}}";
          }
        }
      }
    }
  }
}
